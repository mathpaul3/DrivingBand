<script type="text/javascript">
  function searchBtnSuccess(response, geometry, circleColor) {
    //console.log(response);
    console.log(circleColor, 1);

    var resultpoisData = response.searchPoiInfo.pois.poi;

    var positionBounds = new Tmapv2.LatLngBounds(); //맵에 결과물 확인 하기 위한 LatLngBounds객체 생성
    // 3. POI 마커 표시
    for (var k in resultpoisData) {

      cnt++;
      localStorage.setItem("cnt", cnt);
      // POI 마커 정보 저장
      var noorLat = Number(resultpoisData[k].noorLat);
      var noorLon = Number(resultpoisData[k].noorLon);
      console.log(typeof (k));
      //console.log("noorLat : ", noorLat, "\nnoorLon : ", noorLon);
      var name = resultpoisData[k].name;

      // 좌표 설정
      var markerPosition = new Tmapv2.LatLng(noorLat, noorLon);
      // var lonlat = new Tmap.LonLat(noorLat, noorLon);

      // var iconHtml = new Tmap.IconHtml(
      //   '<div style="border:red solid 1px; background-color:#FF91DC;"><img src="http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_a.png"/></div>',
      //   size,
      //   offset
      // );

      // Marker 설정
      const circle = new Tmapv2.Circle({
        center: new Tmapv2.LatLng(noorLat, noorLon), // 중심좌표
        radius: 100, // 원의 반지름. 크기설정
        strokeColor: `#${circleColor}`, // 테두리 색상
        fillColor: `#${circleColor}`, // 원 내부 색상
        map: map // 지도 객체
      });


      //marker = new Tmapv2.Marker({
      //    position: markerPosition,
      //    //icon : "http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_a.png",
      //    icon:
      //      // '<div style="border:red solid 1px; background-color:#FF00FF;"><img src="http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_' +
      //      // (k % 10) +
      //      // '.png"/></div>',
      //      "http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_" +
      //      (k % 10) +
      //      ".png",
      //    iconSize: new Tmapv2.Size(24, 38),
      //    title: name,
      //    map: map,
      //  }
      // lonlat,
      // iconHtml
      //);
      // 마커들을 담을 배열에 마커 저장

      //markerArr.push(marker);


      positionBounds.extend(markerPosition); // LatLngBounds의 객체 확장
      break;
    }

    map.panToBounds(positionBounds); // 확장된 bounds의 중심으로 이동시키기
    map.zoomOut();
  }
</script>