<script type="text/javascript">
  //카테고리 검색
  let cnt = 0;
  $("#searchBtn").click(function () {
    const searchKeyword = $("#searchKeyword").val();
    const routeData = JSON.parse(localStorage.getItem("routeData"));
    console.log("routeData : ", routeData);
    for (var i in routeData) {
      //for문 [S]

      const geometry = routeData[i].geometry;
      // 경로들의 결과값들을 포인트 객체로 변환
      const latlon = new Tmapv2.Point(
        geometry.coordinates[0],
        geometry.coordinates[1]
      );
      // 포인트 객체를 받아 좌표값으로 다시 변환
      const convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(
        latlon
      );

      const routeInfoObj = {
        lng: convertPoint._lng,
        lat: convertPoint._lat,
        //pointType: pType,
      };

      $.ajax({
        method: "GET", // 요청 방식
        url:
          "https://apis.openapi.sk.com/tmap/pois/search/around?version=1&format=json&callback=result", // url 주소
        data: {
          categories: searchKeyword,
          resCoordType: "WGS84GEO",
          searchType: "name",
          searchtypCd: "A",
          radius: 1,
          reqCoordType: "WGS84GEO",
          centerLon: routeInfoObj.lng,
          centerLat: routeInfoObj.lat,
          appKey: "l7xxabd2c64eec2549daabdf41bb048a9c14",
          count: 10,
        },
        success: function (response) {
          console.log(response);

          var resultpoisData = response.searchPoiInfo.pois.poi;

          var positionBounds = new Tmapv2.LatLngBounds(); //맵에 결과물 확인 하기 위한 LatLngBounds객체 생성

          // 3. POI 마커 표시
          for (var k in resultpoisData) {
            cnt++;
            localStorage.setItem("cnt", cnt);
            // POI 마커 정보 저장
            var noorLat = Number(resultpoisData[k].noorLat);
            var noorLon = Number(resultpoisData[k].noorLon);
            var name = resultpoisData[k].name;

            // POI 정보의 ID
            var id = resultpoisData[k].id;
            console.log(noorLon, noorLat);
            // 좌표 객체 생성
            var pointCng = new Tmapv2.Point(noorLon, noorLat);

            // EPSG3857좌표계를 WGS84GEO좌표계로 변환
            var projectionCng = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(
              pointCng
            );

            var lat = projectionCng._lat;
            var lon = projectionCng._lng;

            // 좌표 설정
            var markerPosition = new Tmapv2.LatLng(lat, lon);

            // Marker 설정
            marker = new Tmapv2.Marker({
              position: markerPosition,
              //icon : "http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_a.png",
              icon:
                "http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_" +
                k +
                ".png",
              iconSize: new Tmapv2.Size(24, 38),
              title: name,
              map: map,
            });
            // 마커들을 담을 배열에 마커 저장
            if (resultpoisData[k].geometry.type) markerArr.push(marker);
            positionBounds.extend(markerPosition); // LatLngBounds의 객체 확장
          }

          map.panToBounds(positionBounds); // 확장된 bounds의 중심으로 이동시키기
          map.zoomOut();
        },
        error: function (request, status, error) {
          console.log(
            "code:" +
              request.status +
              "\n" +
              "message:" +
              request.responseText +
              "\n" +
              "error:" +
              error
          );
        },
      });
      //return false;

      // Marker 추가
      addMarkers(routeInfoObj);
    }
  });
</script>
